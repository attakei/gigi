name: Release packages

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create release on GitHub
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          body: If you want, please see changelogs [changelogs](https://github.com/attakei/gigi/blob/development/CHANGES.md)
          draft: false
          prerelease: false
  build:
    needs: release
    runs-on: ${{ matrix.vm }}
    strategy:
      matrix:
        include:
          - name: linux
            vm: ubuntu-latest
          - name: macosx
            vm: macos-latest
          - name: windows
            vm: windows-latest
    steps:
      - uses: actions/checkout@v1
      - name: Cache Nim resources
        id: cache_nim
        uses: actions/cache@v4
        with:
          path: |
            ~/.choosenim
            ~/.nimble
          key: nimcaches--${{ matrix.vm }}
      - uses: jiro4989/setup-nim-action@v1
        with:
          nim-version: 1.6.0
      - name: Run main
        run: |
          nimble build -d:release -Y
          nimble bundle
      - name: Package(unix)
        if: runner.os != 'Windows'
        uses: thedoctor0/zip-release@master
        with:
          type: tar
          directory: gigi-${{ github.ref_name }}/
          filename: ../gigi-${{ github.ref_name }}_${{ matrix.name }}.tar.gz
      - name: Package(win)
        if: runner.os == 'Windows'
        uses: thedoctor0/zip-release@master
        with:
          type: zip
          directory: gigi-${{ github.ref_name }}/
          filename: ../gigi-${{ github.ref_name }}_${{ matrix.name }}.zip
      - name: Upload to release(unix)
        if: runner.os != 'Windows'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: gigi-${{ github.ref_name }}_${{ matrix.name }}.tar.gz
          asset_name: gigi-${{ github.ref_name }}_${{ matrix.name }}.tar.gz
          asset_content_type: application/gzip
      - name: Upload to release(win)
        if: runner.os == 'Windows'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: gigi-${{ github.ref_name }}_${{ matrix.name }}.zip
          asset_name: gigi-${{ github.ref_name }}_${{ matrix.name }}.zip
          asset_content_type: application/zip
